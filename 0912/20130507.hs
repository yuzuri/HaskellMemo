-- Haskell 勉強会
-- Time-stamp: "2013-05-07 16:26:01 yuzurihara"



-- a=[1..20] で

-- [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]


-- 無限リストの作成
--let a=[13..]

-- 頭の24個だけを取得する
--take 24 a
--[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]


-- 遅延評価
-- サイクルとtake

--Prelude> let a=['a'..'z']
--Prelude> a
--"abcdefghijklmnopqrstuvwxyz"


--Prelude> let b=[2,4..20]
--Prelude> b
--[2,4,6,8,10,12,14,16,18,20]

--Prelude> let b=[13, 26..]
--Prelude> take 24 b
--[13,26,39,52,65,78,91,104,117,130,143,156,169,182,195,208,221,234,247,260,273,286,299,312]


-- Prelude> take 10 ( cycle [1,2,3] )
-- [1,2,3,1,2,3,1,2,3,1]


-- Prelude> take 10 ( repeat 5 )
-- [5,5,5,5,5,5,5,5,5,5]


--Prelude> replicate 10 [10]
--[[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]]
--Prelude> replicate 10 "10"
--["10","10","10","10","10","10","10","10","10","10"]
--Prelude> replicate 10 10
--[10,10,10,10,10,10,10,10,10,10]


-- Prelude> [x|x<-[50..100], x `mod` 7 == 3]
-- [52,59,66,73,80,87,94]


check_odd x = if x `mod ` 2 ==0 then "amari 0" else "amari 1"

-- *Main> [x+y | x<-[1,2..5], y<-[1,2..5]]
-- [2,3,4,5,6,3,4,5,6,7,4,5,6,7,8,5,6,7,8,9,6,7,8,9,10]

--Prelude> let a = [x+y | x<-[1,2..5], y<-[1,2..5]]
--Prelude> a
--[2,3,4,5,6,3,4,5,6,7,4,5,6,7,8,5,6,7,8,9,6,7,8,9,10]
--Prelude> length a
--25


--Prelude> let a = [ x | x<-[1..50], x/=49]
--Prelude> a
--[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50]

addlist xs ys = [x+y| x<-xs, y<-ys]

-- *Main> addlist [1,2,3] [100, 1000, 10000]
-- [101,1001,10001,102,1002,10002,103,1003,10003]


addlist2 xs ys = [x*y| x<-xs, y<-ys, x*y>50]


length2 xs = sum [1 | _<- xs]

-- 小文字を消して大文字だけを残す
removeNonUppercase st = [ c | c <- st, c `elem` ['A'..'Z']]

-- 大文字を消して小文字だけを残す
removeNonDownercase st = [ c | c <- st, c `elem` ['a'..'z']]

--奇数だけを取り除く関数
xxs = [[1,2,3], [4,5,6], [7,8,9]]

-- Main> xxs
-- [[1,2,3],[4,5,6],[7,8,9]]
-- Main> [ [x| x<- xs, even x] | xs <- xxs]
-- [[2],[4,6],[8]]

hoge xxs = [x !! y | x<-xxs, y<-[0..(length xxs ) -1]]


-- Main> xxs
-- [[1,2,3],[4,5,6],[7,8,9]]
-- Main>  xxs !! 0 ++ xxs !! 1 ++ xxs !! 2
-- [1,2,3,4,5,6,7,8,9]


